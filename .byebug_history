c
%i[formated raw].include?(options[:format])
%i[formated raw].include?(format)
options[:format]
raise_invalid_format options[:format]
   67:       raise_invalid_format options[:format]
response.status
response
c
options[:format]
response
c
options
params
c
params
c
request.get(url, params, options)
request = Alegra::Request.new(@setup.host, @setup.path, @setup.token)
=> 17:       request = Alegra::Request.new(@setup.host, @setup.path, @setup.token)
options
params
c
options
params
c
next
options
params
c
reload!
c
format
c
format == :formated
format
c
response
c
next
c
response
response.body
Alegra::Response.new(response.body).call['message']
response.body.empty?
c
next
nex
next
response.status
response
c
@body
@body[:status] = "hola"
@body
c
response.response
response.response_headers
response.status
response.response.response_headers
response.response=.response_headers
response.response_headers
response.inspect
response
c
response[:body]
response
c
response
response.to_hash[:body] = Alegra::Response.new(response.body).call
response.to_hash[:body]
response.to_hash
response.methods
response.keys
response["body"] = Alegra::Response.new(response.body).call
response.body = Alegra::Response.new(response.body).call
response.body =  Alegra::Response.new(response.body).call
 Alegra::Response.new(response.body).call
 Alegra::Response.new(response).call
JSON.parse(response)
response.status
response
